(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "js-yaml", "os", "vscode-languageserver-types"], factory);
    }
})(function (require, exports) {
    'use strict';
    Object.defineProperty(exports, "__esModule", { value: true });
    const jsyaml = require("js-yaml");
    const os_1 = require("os");
    const vscode_languageserver_types_1 = require("vscode-languageserver-types");
    function format(document, options) {
        const text = document.getText();
        const documents = [];
        jsyaml.loadAll(text, doc => documents.push(doc));
        const dumpOptions = { indent: options.tabSize, noCompatMode: true };
        let newText;
        if (documents.length == 1) {
            const yaml = documents[0];
            newText = jsyaml.safeDump(yaml, dumpOptions);
        }
        else {
            const formatted = documents.map(d => jsyaml.safeDump(d, dumpOptions));
            newText = '%YAML 1.2' + os_1.EOL + '---' + os_1.EOL + formatted.join('...' + os_1.EOL + '---' + os_1.EOL) + '...' + os_1.EOL;
        }
        return [vscode_languageserver_types_1.TextEdit.replace(vscode_languageserver_types_1.Range.create(vscode_languageserver_types_1.Position.create(0, 0), document.positionAt(text.length)), newText)];
    }
    exports.format = format;
});
//# sourceMappingURL=yamlFormatter.js.map