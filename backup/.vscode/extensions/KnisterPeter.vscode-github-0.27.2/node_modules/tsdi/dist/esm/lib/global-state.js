import { findIndexOf, removeElement } from './helper';
var listeners = [];
var knownComponents = [];
var knownExternals = [];
export function addKnownComponent(metadata) {
    if (metadata.options.name && findIndexOf(knownComponents, function (meta) { return meta.options.name === metadata.options.name; }) > -1) {
        throw new Error("Duplicate name '" + metadata.options.name + "' for known Components.");
    }
    knownComponents.push(metadata);
    listeners.forEach(function (listener) { return listener(metadata); });
}
export function addKnownExternal(external) {
    if (findIndexOf(knownExternals, function (fn) { return fn === external; }) === -1) {
        knownExternals.push(external);
        listeners.forEach(function (listener) { return listener(external); });
    }
}
export function addListener(listener) {
    listeners.push(listener);
    knownComponents.forEach(function (metadata) { return listener(metadata); });
    knownExternals.forEach(function (external) { return listener(external); });
}
export function removeListener(listener) {
    listeners = removeElement(listeners, function (l) { return l === listener; });
}
//# sourceMappingURL=global-state.js.map