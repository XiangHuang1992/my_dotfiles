export { Get, Post, Put, Delete, Headers, Patch, FormData } from './decorators';
export declare type IPretendDecoder = (response: Response) => Promise<any>;
export declare type IPretendRequest = {
    url: string;
    options: RequestInit;
};
export declare type IPretendRequestInterceptor = (request: IPretendRequest) => IPretendRequest;
export interface Interceptor {
    (chain: Chain, request: IPretendRequest): Promise<any>;
}
export interface Chain {
    (request: IPretendRequest): Promise<any>;
}
export declare class Pretend {
    private static FetchInterceptor;
    static JsonDecoder: IPretendDecoder;
    static TextDecoder: IPretendDecoder;
    private interceptors;
    private decoder;
    static builder(): Pretend;
    interceptor(interceptor: Interceptor): this;
    requestInterceptor(requestInterceptor: IPretendRequestInterceptor): this;
    basicAuthentication(username: string, password: string): this;
    decode(decoder: IPretendDecoder): this;
    target<T>(descriptor: {
        new (): T;
    }, baseUrl: string): T;
}
