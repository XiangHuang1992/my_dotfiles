import { addKnownComponent } from './global-state';
import { getNamedOptions } from './helper';
import * as debug from 'debug';
var log = debug('tsdi');
export function Component() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var decorate = function (target, optionsOrString) {
        if (optionsOrString === void 0) { optionsOrString = {}; }
        log("@Component " + target.name);
        var options = getNamedOptions(optionsOrString);
        addKnownComponent({
            fn: target,
            options: options
        });
        Reflect.defineMetadata('component:options', options, target);
        return target;
    };
    if (args.length === 1 && typeof args[0] === 'function') {
        return decorate(args[0], {});
    }
    return function (target) {
        return decorate(target, args[0] || {});
    };
}
export var component = Component;
//# sourceMappingURL=component.js.map