"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.PNGDisplay = PNGDisplay;
exports.JPEGDisplay = JPEGDisplay;
exports.GIFDisplay = GIFDisplay;

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ImageDisplay = function (_React$Component) {
  _inherits(ImageDisplay, _React$Component);

  function ImageDisplay() {
    _classCallCheck(this, ImageDisplay);

    return _possibleConstructorReturn(this, (ImageDisplay.__proto__ || Object.getPrototypeOf(ImageDisplay)).apply(this, arguments));
  }

  _createClass(ImageDisplay, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate() {
      return false;
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement("img", { role: "presentation", src: "data:" + this.props.mimetype + ";base64," + this.props.data });
    }
  }]);

  return ImageDisplay;
}(_react2.default.Component);

exports.default = ImageDisplay;


ImageDisplay.propTypes = {
  data: _react2.default.PropTypes.string.isRequired,
  mimetype: _react2.default.PropTypes.string.isRequired
};

function PNGDisplay(props) {
  return _react2.default.createElement(ImageDisplay, _extends({ mimetype: "image/png" }, props));
}

function JPEGDisplay(props) {
  return _react2.default.createElement(ImageDisplay, _extends({ mimetype: "image/jpeg" }, props));
}

function GIFDisplay(props) {
  return _react2.default.createElement(ImageDisplay, _extends({ mimetype: "image/gif" }, props));
}
//# sourceMappingURL=image-display.js.map